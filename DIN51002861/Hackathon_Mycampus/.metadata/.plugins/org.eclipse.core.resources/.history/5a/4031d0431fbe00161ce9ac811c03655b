package com.cg.mycampus.Impl;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import com.cg.mycampus.Bean.Employee;
import com.cg.mycampus.Bean.Vendor;

public class RegistrationImpl {
	
	private static Map<Long, Employee> listOfEmployees = new HashMap<>();
	
	private static Map<Long, Vendor> listOfVendors = new HashMap<>();
	
	public boolean addEmployee(Employee employee) {
		try {
			employee.setPin(generatePin());
			listOfEmployees.put(employee.getId(), employee);
			return true;
		} catch (Exception ex) {
			ex.printStackTrace();
			return false;
		}		
	}
	
	public String generatePin() {
		
		        //generate a 4 digit integer 1000 <10000
		        int randomPIN = (int)(Math.random()*9000)+1000;

		        //Store integer in a string
		        randomPIN.toString(PINString);

		    }
		       

		    
	}

	public boolean addVendor(Vendor vendor) {
		try {
			listOfVendors.put(vendor.getId(), vendor);
			return true;
		} catch (Exception ex) {
			ex.printStackTrace();
			return false;
		}		
	}
	
	public boolean changePin(Employee employee, String oldPin, String newPin) {
		try {
			if(employee.getPin().equalsIgnoreCase(oldPin)){
				Employee mapEmployee = listOfEmployees.get(employee.getId());
				mapEmployee.setPin(newPin);
				listOfEmployees.put(employee.getId(), mapEmployee);
				return true;
			} else {
				System.out.println("old pin does not match");
				return false;
			}
		} catch (Exception ex) {
			ex.printStackTrace();
			return false;
		}	
	}

}
